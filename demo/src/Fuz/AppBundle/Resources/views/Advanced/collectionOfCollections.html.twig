{% extends 'FuzAppBundle::layout.html.twig' %}

{% block extra_js %}
    <script src="{{ asset('bundles/fuzapp/js/collection/jquery.collection.js') }}"></script>
{% endblock %}

{% block title %}Advanced usage: Collection of form collections{% endblock %}

{% block body %}

    <h2>{{ block('title') }}</h2>

    <p>
        On the most advanced forms, this is possible to see collection of form collections (for example if the form helps to create
        forms dynamically).
    </p>

    <p>
        Use the <code>children</code> option to set options for your children collections. The only mandatory field is <code>selector</code>,
        which must select all your children collection's root node.
    </p>

    <p>
        To manage deeper collections properly (for example, to apply a <code>max</code> option only on parent collection but not
        on children ones), you should set a distinct prefix to each of your collections.
    </p>

    <p>
       Check out this page's
       <a href="https://github.com/ninsuo/symfony2-collection/blob/master/demo/src/Fuz/AppBundle/Controller/AdvancedController.php" target="_blank">controller</a>
       and
       <a href="https://github.com/ninsuo/symfony2-collection/blob/master/demo/src/Fuz/AppBundle/Resources/views/Advanced/collectionOfCollections.html.twig" target="_blank">view</a>
       to know how to create such form and enable the plugin.
    </p>

    <hr/>

    {% form_theme form 'FuzAppBundle:Advanced:advanced-theme.html.twig' %}

    {{ form(form) }}

    <hr/>

    {% for key, collection in data.collections %}
        <p>Collection {{ key + 1 }}:</p>

        {% for value in collection %}
            <p style="margin-left: 25px;">{{ value }}</p>
        {% endfor %}

    {% endfor %}

    <hr/>

    <p>Code used:</p>
    <pre>{{ block('script') | e }}</pre>

{% endblock %}

{% block script %}

    <script type="text/javascript">

        $('.parent-collection').collection({
            min: 0,
            max: 5,
            up: '<a href="#" class="btn btn-default"><span class="glyphicon glyphicon-arrow-up"></span> Move collection up</a>',
            down: '<a href="#" class="btn btn-default"><span class="glyphicon glyphicon-arrow-down"></span> Move collection down</a>',
            add: '<a href="#" class="btn btn-default"><span class="glyphicon glyphicon-plus-sign"></span> Add collection</a>',
            remove: '<a href="#" class="btn btn-default"><span class="glyphicon glyphicon-trash"></span> Remove collection</a>',
            prefix: 'parent',
            children: [{
                selector: '.child-collection',
                add: '<a href="#" class="btn btn-default">Add</span></a>'
            }]
        });

    </script>

{% endblock %}